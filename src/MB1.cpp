#include<stdio.h>
#include<math.h>
using namespace std;
int a[120]={2,3,5,7,11,101,131,151,181,191,313,353,373,383,727,757,787,797,919,929,10301,10501,10601,11311,11411,12421,12721,12821,13331,13831,13931,14341,14741,15451,15551,16061,16361,16561,16661,17471,17971,18181,18481,19391,19891,19991,30103,30203,30403,30703,30803,31013,31513,32323,32423,33533,34543,34843,35053,35153,35353,35753,36263,36563,37273,37573,38083,38183,38783,39293,70207,70507,70607,71317,71917,72227,72727,73037,73237,73637,74047,74747,75557,76367,76667,77377,77477,77977,78487,78787,78887,79397,79697,79997,90709,91019,93139,93239,93739,94049,94349,94649,94849,94949,95959,96269,96469,96769,97379,97579,97879,98389,98689,1003001,1008001,1022201,1028201,1035301,1043401,1055501};
int prime[1000000]={0};
bool *flag=new bool[1000000];

int c=0;

void sieve()
{
int i,j,d,U,L;
L=2;
U=1000000;
d=U-L+1;
for (i=0;i<d;i++)
flag[i]=true;
for (i=(L%2!=0);i<d;i+=2)
flag[i]=false;
for (i=3;i<=sqrt(U);i+=2)
{
if (i>L && !flag[i-L])
continue;

j=L/i*i;
if (j<L)
j+=i;
if (j==i)
j+=i;
j-=L;
for (;j<d;j+=i)
flag[j]=false;
}
if (L<=1)
flag[1-L]=false;
if (L<=2)
flag[2-L]=true;
for (i=0;i<d;i++)
if (flag[i])
{
prime[c++]=L+i;
}
}

int main()
{
    sieve();
    int t,f,m,x,s,n;
    scanf("%d",&t);
    while(t--)
    {
        f=1;
        scanf("%d",&n);
        s=a[n-1];
        m=s;
        while(s>0)
        {
            x=s%10;
            s=s/10;
            if(x!=0)
                f=f*x;
        }
        printf("%d %d\n",m,prime[f-1]);
    }
    return 0;
}
